[{"C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\index.js":"1","C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\App.js":"2","C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\serviceWorker.js":"3","C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\components\\contacts.js":"4","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\index.js":"5","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\App.js":"6","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\serviceWorker.js":"7","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Nav.js":"8","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Search.js":"9","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\main\\HorizontalList.js":"10","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\main\\MovieCard.js":"11","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\services\\imdb.js":"12","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\services\\Imdb.js":"13","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Autocomplete.js":"14"},{"size":463,"mtime":1621189709573,"results":"15","hashOfConfig":"16"},{"size":568,"mtime":1621189709557,"results":"17","hashOfConfig":"16"},{"size":5083,"mtime":1621189709573,"results":"18","hashOfConfig":"16"},{"size":626,"mtime":1621201840807,"results":"19","hashOfConfig":"16"},{"size":451,"mtime":1621207075000,"results":"20","hashOfConfig":"21"},{"size":3589,"mtime":1621718916563,"results":"22","hashOfConfig":"21"},{"size":4948,"mtime":1621207075000,"results":"23","hashOfConfig":"21"},{"size":278,"mtime":1621679870984,"results":"24","hashOfConfig":"21"},{"size":1096,"mtime":1621720355575,"results":"25","hashOfConfig":"21"},{"size":1187,"mtime":1621714225850,"results":"26","hashOfConfig":"21"},{"size":596,"mtime":1621713131476,"results":"27","hashOfConfig":"21"},{"size":636,"mtime":1621702578971,"results":"28","hashOfConfig":"21"},{"size":636,"mtime":1621702578971,"results":"29","hashOfConfig":"21"},{"size":255,"mtime":1621720370737,"results":"30","hashOfConfig":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"km23rh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"iji07z",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\index.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\App.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\serviceWorker.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\dojo-blog\\src\\components\\contacts.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\index.js",[],["65","66"],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\App.js",["67"],"import React, {Component} from 'react';\nimport HorizontalList from './components/main/HorizontalList';\nimport './App.css';\nimport Nav from './components/shared/Nav';\nimport SearchBar from './components/shared/Search';\n\nconst apiKey = \"a307e8eddfmsh2a33e3d638138dcp17c32cjsne44e5a3808fc\";\nconst apiHost = \"imdb-internet-movie-database-unofficial.p.rapidapi.com\";\n\n\n// const searchMovie = async(searchTerm)=>{\n   \n//     fetch(`https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${searchTerm}`,\n//     {\n//         method:'GET',\n//         headers:{\n//             \"x-rapidapi-key\":apiKey,\n//             \"x-rapidapi-host\": apiHost,\n//             \"useQueryString\": true\n//         }\n//      }\n//     )\n//     .then(res => res.json())\n//     .then((data) => {\n//         console.log(data);\n//         return data;\n//     })\n//     .catch(console.log)\n//         return null;\n// }\n\nclass App extends Component {\n\n    state = {\n        movies: [],\n        selected: '',\n        searchTerm:'',\n    }\n\n    searchMovie = (searchTerm)=>{\n   \n        fetch(`https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${searchTerm}`,\n        {\n            method:'GET',\n            headers:{\n                \"x-rapidapi-key\":apiKey,\n                \"x-rapidapi-host\": apiHost,\n                \"useQueryString\": true\n            }\n         }\n        )\n        .then(res => res.json())\n        .then((data) => {\n            console.log(data);\n            this.setState({movies: data.titles})\n        })\n        .catch(console.log)\n            return null;\n    }\n\n    handleCallback = (term) =>{\n      this.setState({searchTerm: term})\n      this.searchMovie(term)\n   \n    }\n\n    render() {\n     \n        return (\n            \n            <div className =\"page-container\">\n                <div class=\"page-content\">\n                <div class=\"nav-logo text-center\" >B Movies</div>\n                <SearchBar searchCallback = {this.handleCallback}/>\n                { this.state.searchTerm.length>1? <div class=\"heading\">RESULTS FOR \"{this.state.searchTerm}\"</div>:<div class=\"heading\">POPULAR SEARCHES</div>}\n               {this.state.searchTerm.length>1?\n               <HorizontalList movies={this.state.movies} />\n                :\n                <div>Popular searches</div>\n                // <Async promiseFn={searchMovie(this.searchTerm)}>\n                // {({ data, err, isLoading }) => {\n                //     if(isLoading) return <div>Loading...</div>\n                //     if(err) return <div>An error occurred</div> \n                //     if(data)\n                //     return <HorizontalList movies={data} selected={this.state.selected} />\n                // }}\n                // </Async>\n                }\n               \n                </div>\n            </div>\n        )\n    }\n\n\n\n    // componentDidMount() {\n    //     fetch('https://imdb8.p.rapidapi.com/title/get-most-popular-movies',\n    //         {\n    //             method:'GET',\n    //             headers:{\n    //                 \"x-rapidapi-key\":'a307e8eddfmsh2a33e3d638138dcp17c32cjsne44e5a3808fc',\n    //                 \"x-rapidapi-host\":'imdb8.p.rapidapi.com',\n    //                 \"useQueryString\": true\n    //             }\n    //         }\n    //         )\n    //         .then(res => res.json())\n    //         .then((data) => {\n    //            console.log(data);\n    //             this.setState({\n    //                  movies: typeof(data)==\"object\"?data:[]\n    //                 })\n    //         })\n    //         .catch(console.log)\n    // }\n}\n\nexport default App;\n","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\serviceWorker.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Nav.js",["68"],"import React from 'react'\r\nimport Search from './Search'\r\nimport './Nav.css';\r\n\r\nconst Nav= ()=>{\r\n\r\n    return (\r\n        <div class=\"navbar\">\r\n            <div class=\"nav-logo\">B Movies</div>\r\n           \r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav;","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Search.js",["69"],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\main\\HorizontalList.js",[],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\main\\MovieCard.js",["70"],"import React from 'react'\r\nimport './MovieCard.css';\r\n\r\n\r\nclass MovieCard extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.movie = props.movie;\r\n        this.index = props.index;\r\n    }\r\n    \r\n     render(){\r\n        return <div className=\"movie-card\" >\r\n            <div class=\"card-image\">\r\n                <img width=\"150\" class=\"tile-image\" src={this.movie.image}></img>\r\n            </div>\r\n            <div class=\"card-content\">\r\n                {this.movie.title}\r\n            </div>\r\n        </div>\r\n    }\r\n};\r\n\r\nexport default MovieCard;","C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\services\\imdb.js",["71"],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\services\\Imdb.js",["72"],"const apiKey = \"a307e8eddfmsh2a33e3d638138dcp17c32cjsne44e5a3808fc\";\r\nconst apiHost = \"imdb-internet-movie-database-unofficial.p.rapidapi.com\";\r\n\r\n\r\nconst searchMovie = (searchTerm)=>{\r\n    fetch(`https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${searchTerm}`,\r\n    {\r\n        method:'GET',\r\n        headers:{\r\n            \"x-rapidapi-key\":apiKey,\r\n            \"x-rapidapi-host\": apiHost,\r\n            \"useQueryString\": true\r\n        }\r\n    }\r\n    )\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n        console.log(data);\r\n        return data;\r\n    })\r\n    .catch(console.log)\r\n        return null;\r\n}\r\n\r\n",["73","74"],"C:\\Users\\Bright\\Desktop\\react-apps\\movies\\src\\components\\shared\\Autocomplete.js",["75"],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"84","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"85","line":4,"column":8,"nodeType":"82","messageId":"83","endLine":4,"endColumn":20},{"ruleId":"86","severity":1,"message":"87","line":17,"column":17,"nodeType":"88","endLine":17,"endColumn":76},{"ruleId":"80","severity":1,"message":"89","line":4,"column":7,"nodeType":"82","messageId":"83","endLine":4,"endColumn":11},{"ruleId":"80","severity":1,"message":"90","line":5,"column":7,"nodeType":"82","messageId":"83","endLine":5,"endColumn":18},{"ruleId":"76","replacedBy":"91"},{"ruleId":"78","replacedBy":"92"},{"ruleId":"80","severity":1,"message":"93","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":17},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'Autocomplete' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Imdb' is defined but never used.","'searchMovie' is assigned a value but never used.",["94"],["95"],"'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]